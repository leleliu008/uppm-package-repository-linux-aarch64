name: publish

on:
  workflow_dispatch

jobs:
  publish:
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ github.token }}
      PKG_NAMES: bash bat bison bmake bzip2 b3sum cmake coreutils curl darkhttpd diffutils dos2unix doxygen ed file findutils gawk git gm4 gmake gh grep gsed gtar gzip jq libarchive lzip lz4 nasm ninja openssl patchelf patch pkgconf pkg-config qpdf rsync swig sqlite tree uctags unzip uppm util-linux volta wget xmake xxd xz yasm yq zip p7zip zstd zoxide base16 base64 sysinfo easyutils gettext-tools glib-tools xsltproc libxml2-utils procps

    steps:
      - run: |
          cat > run.sh <<EOF
          set -e

          COLOR_GREEN='\033[0;32m'        # Green
          COLOR_PURPLE='\033[0;35m'       # Purple
          COLOR_OFF='\033[0m'             # Reset

          echo() {
              printf '%b\n' "\$*"
          }

          run() {
              echo "\${COLOR_PURPLE}==>\${COLOR_OFF} \${COLOR_GREEN}\$@\${COLOR_OFF}"
              eval "\$*"
          }

          run uname -a

          run wget https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
          run chmod a+x ppkg
          run ./ppkg setup --use-system-package-manager
          run ./ppkg update

          echo "PKG_NAMES=$PKG_NAMES"
          for PKG_NAME in $PKG_NAMES
          do
            run ./ppkg install "$PKG_NAME" --link-type=static-only --install-lib=static

            if [     -d ~/.ppkg/installed/$PKG_NAME/bin ] || [ -d ~/.ppkg/installed/$PKG_NAME/sbin ] ; then
                if [ -d ~/.ppkg/installed/$PKG_NAME/include ] ; then
                    rm -rf               ~/.ppkg/installed/$PKG_NAME/include
                    sed -i '/|include/d' ~/.ppkg/installed/$PKG_NAME/.ppkg/manifest.txt
                fi

                if [ -d ~/.ppkg/installed/$PKG_NAME/lib ] ; then
                    rm -rf           ~/.ppkg/installed/$PKG_NAME/lib
                    sed -i '/|lib/d' ~/.ppkg/installed/$PKG_NAME/.ppkg/manifest.txt
                fi

               ./ppkg pack "$PKG_NAME"
            fi
          done

          date +%Y.%m.%d > ts.txt

          TAGNAME="$(cat ts.txt)"

          UPPM_FORMULA_ROOT_DIR="uppm-formula-repository-linux-aarch64-$TAGNAME"
          UPPM_FORMULA_DIR="$UPPM_FORMULA_ROOT_DIR/formula"

          install -d "$UPPM_FORMULA_DIR"

          for PACKAGE_NAME in $PKG_NAMES
          do
              RECEIPT_FILEPATH="${HOME}/.ppkg/installed/${PACKAGE_NAME}/.ppkg/receipt.yml"

              PACKAGE_SUMMARY="$(yq .summary "$RECEIPT_FILEPATH")"
              PACKAGE_WEB_URL="$(yq .web-url "$RECEIPT_FILEPATH")"
              PACKAGE_VERSION="$(yq .version "$RECEIPT_FILEPATH")"

              PACKAGE_BIN_FILENAME="$PACKAGE_NAME-$PACKAGE_VERSION-linux-aarch64.tar.xz"

              PACKAGE_BIN_SHA=$(sha256sum "$PACKAGE_BIN_FILENAME" | cut -d ' ' -f1)

              PACKAGE_BIN_URL="https://github.com/leleliu008/uppm-package-repository-linux-aarch64/releases/download/${TAGNAME}/${PACKAGE_BIN_FILENAME}"

              printf '%s\n' "summary: $PACKAGE_SUMMARY
          webpage: $PACKAGE_WEB_URL
          version: $PACKAGE_VERSION
          bin-url: $PACKAGE_BIN_URL
          bin-sha: $PACKAGE_BIN_SHA"  > "$UPPM_FORMULA_DIR/$PACKAGE_NAME.yml"
          done

          tar cvJf "$UPPM_FORMULA_ROOT_DIR.tar.xz" "$UPPM_FORMULA_ROOT_DIR"

          EOF

          chmod +x run.sh

      # https://github.com/multiarch/qemu-user-static
      - run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - run: docker run -v "$PWD:$PWD" -w "$PWD" -e "PKG_NAMES='$PKG_NAMES'" --name alpine arm64v8/alpine sh run.sh

      - run: |
          sha256sum *.tar.xz > sha256sums.txt

          cat > notes.md <<EOF
          these packages are created by [ppkg](https://github.com/leleliu008/ppkg).

          these packages are statically linked against [musl-libc](https://musl.libc.org/).

          these packages are relocatable which means that you can install them to anywhere.

          ## Environment Variables

          **following environment variables should be set for \`git\` package**

          \`\`\`bash
          export GIT_EXEC_PATH="\$GIT_INSTALL_DIR/libexec/git-core"
          export GIT_TEMPLATE_DIR="\$GIT_INSTALL_DIR/share/git-core/templates"
          \`\`\`

          **following environment variables should be set for \`file\` package**

          \`\`\`bash
          export MAGIC="\$FILE_INSTALL_DIR/share/misc/magic.mgc"
          \`\`\`

          ## sha256sum

          \`\`\`
          $(cat sha256sums.txt)
          \`\`\`
          EOF

          # to avaid: failed to run git: fatal: not a git repository (or any of the parent directories): .git
          git -c init.defaultBranch=master init
          git remote add origin ${{ github.repositoryUrl }}

          TAGNAME="$(cat ts.txt)"

          gh release create "$TAGNAME" *.tar.xz sha256sums.txt --title "$TAGNAME" --notes-file notes.md
